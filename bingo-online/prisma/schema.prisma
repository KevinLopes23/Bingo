// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  balance       Float    @default(0)
  hostedRooms   Room[]   @relation("HostedRooms")
  participantIn Participant[]
}

model Room {
  id           String   @id @default(cuid())
  code         String   @unique
  name         String
  entryFee     Float    @default(0)
  roundCount   Int      @default(1)
  status       String   @default("waiting") // waiting, active, finished
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  hostId       String
  host         User     @relation("HostedRooms", fields: [hostId], references: [id])
  participants Participant[]
  rounds       Round[]
}

model Participant {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  joined    DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
  cards     Card[]
  winnings  Float    @default(0)
}

model Card {
  id            String   @id @default(cuid())
  numbers       String   // JSON array of numbers in the card
  markedNumbers String   @default("[]") // JSON array of marked numbers
  participantId String
  participant   Participant @relation(fields: [participantId], references: [id])
  roundId       String
  round         Round    @relation(fields: [roundId], references: [id])
}

model Round {
  id            String   @id @default(cuid())
  roomId        String
  room          Room     @relation(fields: [roomId], references: [id])
  number        Int
  status        String   @default("waiting") // waiting, active, finished
  drawnNumbers  String   @default("[]") // JSON array of drawn numbers
  winnerId      String?
  cards         Card[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
